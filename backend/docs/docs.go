// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/approvals": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all approvals",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "approvals"
                ],
                "summary": "Get all approvals",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Approval"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new approval with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "approvals"
                ],
                "summary": "Create a new approval",
                "parameters": [
                    {
                        "description": "Approval Data",
                        "name": "approval",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Approval"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Approval"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/approvals/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get details of an approval by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "approvals"
                ],
                "summary": "Get an approval by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Approval ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Approval"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update details of an approval by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "approvals"
                ],
                "summary": "Update an approval by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Approval ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Approval Data",
                        "name": "approval",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Approval"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Approval"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete an approval by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "approvals"
                ],
                "summary": "Delete an approval by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Approval ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Authenticate user and return JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login Credentials",
                        "name": "credential",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.LoginResponse"
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Logout current user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "User logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handlers.LogoutResponse"
                        }
                    }
                }
            }
        },
        "/auth/me": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get details of currently logged-in user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Get current user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/departments": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all departments",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "departments"
                ],
                "summary": "Get all departments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Department"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new department with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "departments"
                ],
                "summary": "Create a new department",
                "parameters": [
                    {
                        "description": "Department Data",
                        "name": "department",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Department"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Department"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/departments/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get details of a department by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "departments"
                ],
                "summary": "Get a department by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Department ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Department"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update details of a department by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "departments"
                ],
                "summary": "Update a department by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Department ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Department Data",
                        "name": "department",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Department"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Department"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a department by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "departments"
                ],
                "summary": "Delete a department by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Department ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all users",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new user with the input payload",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User Data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get details of a user by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get a user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update details of a user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update a user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User Data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a user by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete a user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handlers.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.ErrorResponse": {
            "type": "object",
            "properties": {
                "msg": {
                    "type": "string"
                }
            }
        },
        "handlers.LoginRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "handlers.LoginResponse": {
            "type": "object",
            "properties": {
                "expires_at": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "handlers.LogoutResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "models.Approval": {
            "type": "object",
            "properties": {
                "approval_date": {
                    "type": "string"
                },
                "approval_type": {
                    "$ref": "#/definitions/models.ApprovalType"
                },
                "approver": {
                    "$ref": "#/definitions/models.User"
                },
                "approver_id": {
                    "type": "integer"
                },
                "comments": {
                    "type": "string"
                },
                "created_at": {
                    "description": "创建时间",
                    "type": "string"
                },
                "employee": {
                    "$ref": "#/definitions/models.User"
                },
                "employee_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "request_date": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/models.Status"
                },
                "updated_at": {
                    "description": "更新时间",
                    "type": "string"
                }
            }
        },
        "models.ApprovalType": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "General",
                "Leave",
                "Reimbursement"
            ]
        },
        "models.Department": {
            "type": "object",
            "properties": {
                "created_at": {
                    "description": "创建时间",
                    "type": "string"
                },
                "function_code": {
                    "description": "部门职能编号",
                    "type": "string"
                },
                "id": {
                    "description": "部门ID",
                    "type": "integer"
                },
                "name": {
                    "description": "部门名称",
                    "type": "string"
                },
                "parentDepartment": {
                    "$ref": "#/definitions/models.Department"
                },
                "parent_department_id": {
                    "description": "上级部门ID",
                    "type": "integer"
                },
                "updated_at": {
                    "description": "更新时间",
                    "type": "string"
                }
            }
        },
        "models.EducationLevel": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8
            ],
            "x-enum-varnames": [
                "Doctor",
                "Master",
                "Bachelor",
                "Associate",
                "JuniorCollege",
                "HighSchool",
                "MiddleSchool",
                "PrimarySchool",
                "None"
            ]
        },
        "models.Ethnicity": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54
            ],
            "x-enum-varnames": [
                "Achang",
                "Bai",
                "Bonan",
                "Blang",
                "Bouyei",
                "Korean",
                "Daur",
                "Dai",
                "Deang",
                "Dongxiang",
                "Dong",
                "Drung",
                "Ewenki",
                "Evenk",
                "Gaoshan",
                "Gelao",
                "Hani",
                "Kazak",
                "Han",
                "Hezhe",
                "Hui",
                "Jino",
                "Jing",
                "Jingpo",
                "Kirgiz",
                "Lahu",
                "Li",
                "Lisu",
                "Lhoba",
                "Manchu",
                "Maonan",
                "Menba",
                "Mongol",
                "Miao",
                "Mulam",
                "Naxi",
                "Nu",
                "Pumi",
                "Qiang",
                "Sala",
                "She",
                "Shui",
                "Tajik",
                "Tatar",
                "Tujia",
                "Tu",
                "Wa",
                "Uyghur",
                "Uzbek",
                "Xibe",
                "Yao",
                "Yi",
                "Yugur",
                "Tibetan",
                "Zhuang"
            ]
        },
        "models.Gender": {
            "type": "integer",
            "enum": [
                -1,
                0,
                1
            ],
            "x-enum-varnames": [
                "Male",
                "NonBi",
                "Female"
            ]
        },
        "models.PoliticalStatus": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "x-enum-varnames": [
                "PartyMember",
                "YouthLeagueMember",
                "Mass",
                "Other"
            ]
        },
        "models.Position": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "Staff",
                "Manager",
                "Executive"
            ]
        },
        "models.Status": {
            "type": "integer",
            "enum": [
                0,
                1
            ],
            "x-enum-varnames": [
                "Active",
                "Inactive"
            ]
        },
        "models.Title": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47
            ],
            "x-enum-varnames": [
                "CEO",
                "CFO",
                "COO",
                "CTO",
                "CMO",
                "CIO",
                "CHRO",
                "CSO",
                "CPO",
                "VP",
                "GeneralManager",
                "Director",
                "TeamLeader",
                "Supervisor",
                "Consultant",
                "Analyst",
                "Engineer",
                "Developer",
                "Designer",
                "Architect",
                "Accountant",
                "Auditor",
                "Lawyer",
                "Paralegal",
                "Recruiter",
                "Trainer",
                "Assistant",
                "Secretary",
                "Intern",
                "SalesRepresentative",
                "MarketingSpecialist",
                "CustomerServiceRepresentative",
                "BusinessDevelopmentManager",
                "ProjectManager",
                "ProductManager",
                "OperationsManager",
                "HRSpecialist",
                "FinanceManager",
                "ITSpecialist",
                "DataScientist",
                "Researcher",
                "ContentCreator",
                "Copywriter",
                "Editor",
                "PRSpecialist",
                "LogisticsCoordinator",
                "QualityAssuranceSpecialist",
                "SecuritySpecialist"
            ]
        },
        "models.User": {
            "type": "object",
            "properties": {
                "archive_location": {
                    "description": "档案存放地",
                    "type": "string"
                },
                "birthday": {
                    "description": "生日",
                    "type": "string"
                },
                "created_at": {
                    "description": "创建时间",
                    "type": "string"
                },
                "department": {
                    "$ref": "#/definitions/models.Department"
                },
                "department_id": {
                    "description": "部门 ID",
                    "type": "integer"
                },
                "education_level": {
                    "description": "学历",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.EducationLevel"
                        }
                    ]
                },
                "ethnicity": {
                    "description": "民族",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Ethnicity"
                        }
                    ]
                },
                "gender": {
                    "description": "性别",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Gender"
                        }
                    ]
                },
                "hire_date": {
                    "description": "入职日期",
                    "type": "string"
                },
                "id": {
                    "description": "员工 ID",
                    "type": "integer"
                },
                "id_number": {
                    "description": "身份证号",
                    "type": "string"
                },
                "marital_status": {
                    "description": "婚姻状况",
                    "type": "boolean"
                },
                "name": {
                    "description": "姓名",
                    "type": "string"
                },
                "password": {
                    "description": "密码哈希值",
                    "type": "string"
                },
                "phone_number": {
                    "description": "电话号码",
                    "type": "string"
                },
                "photo": {
                    "description": "照片",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "place_of_origin": {
                    "description": "籍贯",
                    "type": "integer"
                },
                "political_status": {
                    "description": "政治面貌",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.PoliticalStatus"
                        }
                    ]
                },
                "position": {
                    "description": "职位",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Position"
                        }
                    ]
                },
                "residence_location": {
                    "description": "户口所在地",
                    "type": "string"
                },
                "status": {
                    "description": "状态",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Status"
                        }
                    ]
                },
                "supervisor": {
                    "$ref": "#/definitions/models.User"
                },
                "supervisor_id": {
                    "description": "主管 ID",
                    "type": "integer"
                },
                "title": {
                    "description": "职务",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.Title"
                        }
                    ]
                },
                "updated_at": {
                    "description": "更新时间",
                    "type": "string"
                },
                "user_type": {
                    "description": "用户类型",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.UserType"
                        }
                    ]
                },
                "username": {
                    "description": "用户名",
                    "type": "string"
                },
                "work_id_number": {
                    "description": "工作证号",
                    "type": "string"
                }
            }
        },
        "models.UserType": {
            "type": "integer",
            "enum": [
                1,
                2
            ],
            "x-enum-varnames": [
                "Admin",
                "NormalUser"
            ]
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Employee Management System API",
	Description:      "This is a sample server for an employee management system.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
